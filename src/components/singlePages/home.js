  import React, { Component } from 'react';
  // import firebase from 'firebase';
  import {
    StyleSheet,
    View,
    Text,
  Image,
    // Alert,
    StatusBar,
    // Keyboard,
    ScrollView,
    // TouchableWithoutFeedback
  } from 'react-native';
  import { Actions } from 'react-native-router-flux';
  // import renderIf from 'render-if';
  // import Icon from 'react-native-vector-icons/FontAwesome';
  import {
    Button,
    // CardSection,
    // ShapedTextInput,
    // Spinner,
    // PickerView,
    // PickerButton,
    // HscrollView
  } from '../common/';
  import generalUtils from '../../utils/generalUtils';
  import images from '../../json/images.json';
  // const _ = require('lodash');

  class HomePageHolder extends Component {
    state= {
      days: 10,
      words: 130
    }
    componentWillMount() {
      if(this.props.deviceAndroid){
      var PushNotification = require('react-native-push-notification');
      PushNotification.configure({

    // (optional) Called when Token is generated (iOS and Android)
    onRegister: function(token) {
        console.log( 'TOKEN:', token );
    },

    // (required) Called when a remote or local notification is opened or received
    onNotification: function(notification) {
        console.log( 'NOTIFICATION:', notification );
    },
    permissions: {
        alert: true,
        badge: true,
        sound: true
    },
    popInitialNotification: true,
    requestPermissions: true,
});
      PushNotification.localNotificationSchedule({
    /* Android Only Properties */
    id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
    smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
    bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
    subText: "This is a subText", // (optional) default: none
    /* iOS and Android properties */
    title: "Your word time", // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
    message: "time to learn ahmed word", // (required)
    playSound: true, // (optional) default: true
    soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
    date: new Date(Date.now() + (7 * 1000)) // in 60 sec
});
      }
      console.log(this.props);
      if (this.props.replaceColor) {
        this.props.replaceColor('white');
      }
      generalUtils.storageGetItem('status').then((data) => {
        if (data === 'choosen') {
          Actions.ChooseWordsHolder();
        }
      });
    }
    ComponentDidUpdate() {

    }
    render() {
      return (
        <View style={styles.mainContainer}>
          <StatusBar barStyle='light-content' />
          <View style={{ flex: 10.5 }} >
            <ScrollView style={styles.scrollView} contentContainerStyle={{ flex: 1 }}>
              <View style={styles.container}>
                <View style={styles.spacer} />
                <View style={styles.header}>
                  <Text style={styles.headerText}>{this.props.lang.text.welcome}</Text>
                </View>
                <View style={styles.statistics}>
                  <View style={styles.popUpContainer}>
                    <View style={styles.spacepop} />
                    <View style={styles.popUp}>
                      <Text style={styles.popText}>{`${this.props.lang.title.days}: ${this.state.days}`}</Text>
                      <Text style={styles.popText}>{`${this.props.lang.title.words}: ${this.state.words}`}</Text>
                    </View>
                  </View>
                  <View style={styles.photoHolder}>
                    <Image source={{ uri: images.birdImage.data }} style={styles.birdImage} />
                  </View>
                </View>
                <View style={styles.startHolder}>
                  <Text style={styles.headerText}>{this.props.lang.text.starter}</Text>
                  <Button
                    text={this.props.lang.title.startLearn}
                    style={styles.SignUpButton}
                    textStyle={styles.SignUpButtonText}
                    onPressMe={Actions.ChooseWordsHolder}
                  />
                </View>
              </View>
            </ScrollView>
          </View>
        </View>
      );
    }
  }
  const styles = StyleSheet.create({
    SignUpButton: {
      borderRadius: 20,
      marginLeft: 90,
      marginRight: 90,
      backgroundColor: 'rgba(255,255,255,1)',
      marginTop: 10,
    },
    SignUpButtonText: {
      alignSelf: 'center',
      color: '#00cccc',
      fontSize: 16,
      fontWeight: '600',
      paddingTop: 10,
      paddingBottom: 10
    },
    scrollView: {
      flex: 1
    },
    container: {
      flex: 1
    },
    mainContainer: {
      flex: 1,
      backgroundColor: '#00cccc',
      paddingBottom: 50
    },
    spacer: {
      flex: 0.5
    },
    header: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#00cccc',
      paddingLeft: 40,
      paddingRight: 40
    },
    headerText: {
      fontSize: 18,
      color: 'white',
      textAlign: 'center'
    },
    popText: {
      fontSize: 18,
      color: '#00cccc',
      textAlign: 'center'
    },
    statistics: {
      flex: 3.5,
      flexDirection: 'row',
    },
    popUpContainer: {
      flex: 5,
      flexDirection: 'row',
      height: 80,
      marginTop: 10
    },
    spacepop: {
      flex: 1
    },
    popUp: {
      backgroundColor: 'white',
      borderRadius: 10,
      flex: 4,
      justifyContent: 'center'
    },
    photoHolder: {
      flex: 7,
      justifyContent: 'flex-end',
    },
    birdImage: {
      height: 160,
      width: 180,
      marginLeft: 10
    },
    startHolder: {
      flex: 1.5,
      justifyContent: 'center'
    },
  });

  module.exports = HomePageHolder;
